server:
  port: 8080
#  port: 8443
#  ssl:
#    key-store: 
#    key-store-password: 
#    key-store-type: 
#    key-alias: 
logging:
  pattern:
    console: '%d{MM/dd HH:mm:ss.SSS} [%t] [%clr(%-5p)] %clr(%logger.%M\(%line\)){cyan} - %msg %n'
    file: '%d{MM/dd HH:mm:ss.SSS} [%t] [%clr(%-5p)] %clr(%logger.%M\(%line\)){cyan} - %msg %n'
 
nc:
  remote:
    klevr:
      url: "http://localhost:8081"
    
  security:
    representationDomain: localhost
    permit-all-pages:
    - "/login**"
    - "/swagger**/**"
    - "/v2/api-docs/**"
    - "/webjars/**"
    jwt:
      url: /login
      header: X-AUTHORIZATION
      prefix: Bearer
      expiration: 3600
      secret: "NeX(|0Ud_Use&0n1y"
      signatureAlgorithm: HS512
      baseAuthorizationEndpoint: /login/oauth2/authorization

  #OAuth2 설정
  oauth2:
    client:
      attribute:
        google:
          id: "sub"
          name: "name"
          email: "email"
          mobile: ""
          photo: "picture"
          emailCertificated: "email_verified"
        github:
          id: "id"
          name: "login"
          email: "email"
          mobile: ""
          photo: "avatar_url"
          emailCertificated: ""
        naver:
          id: "id"
          name: "nickname"
          email: "email"
          mobile: ""
          photo: "profile_image"
          emailCertificated: ""
        kakao:
          id: "id"
          name: "properties.nickname"
          email: ""
          mobile: ""
          photo: "properties.profile_image"
          emailCertificated: ""
          
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 2000
        readTimeout: 2000
        loggerLevel: NONE

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 2000
          
spring:
  jpa:
    hibernate:
      naming:
        physical-strategy: co.kr.nexcloud.framework.jpa.SnakeCaseNamingStrategy
  
  thymeleaf:
    prefix: classpath:templates/
    suffix: .html
    mode: HTML
    cache: false
    template-resolver-order: 1
    
  datasource:
    url: "jdbc:mariadb://127.0.0.1:3306/nexclipper?useSSL=false&autoReconnect=true&characterEncoding=utf8"
    username: nexclipper
    password: nexclipper
    hikari:
      driver-class-name: org.mariadb.jdbc.Driver
      # 풀에서 커넥션을 구할 때 대기 시간을 밀리초 단위로 지정한다. 대기 시간 안에 구하지 못하면 익셉션이 발생한다. 허용 가능한 최소 값은 250이다.
      # dfault: 30000 (30초)
      #connection-timeout: 30000
      # 커넥션이 유효한지 검사할 때 대기 시간을 지정한다. 이 값은 connectionTimeout보다 작아야 한다. 허용 가능한 최소 값은 250이다.
      # default: 5000 (5초)
      #validation-timeout: 5000
      # 커넥션이 풀에서 유휴 상태로 남을 수 있는 최대 시간을 밀리초 단위로 지정한다. 이 값은 minimumIdle이 maximumPoolSize보다 작을 때만 적용된다.
      # 타임아웃이 지난 커넥션을 제거하기까지 최대 30초, 평균 15초 차이 날 수 있다.
      # 이 타임아웃 전에는 유휴 커넥션을 제거하지 않는다. 풀의 커넥션 개수가 minimumIdle이 되면 유휴 여부에 상관없이 커넥션을 풀에서 제거하지 않는다.
      # 이 값이 0이면 유휴 커넥션을 풀에서 제거하지 않는다. 허용 가능한 최소 값은 10000(10초)이다.
      # default: 600000 (10분)
      #idle-timeout: 3600000
      # 커넥션의 최대 유지 시간을 밀리초 단위로 설정한다. 이 시간이 지난 커넥션 중에서 사용중인 커넥션은 종료된 이후에 풀에서 제거한다.
      # 갑자기 풀에서 많은 커넥션이 제거되는 것을 피하기 위해 negative attenuation(감쇠)를 적용해 점진적으로 제거한다.
      # 이 값을 설정할 것을 권장한다. DB나 인프라스트럭처에서 제한한 커넥션 제한 시간 보다 최소한 30초는 짧아야 한다.
      # 이 값이 0이면 풀에서 제거하지 않지만 idleTimeout은 적용된다.
      # default: 1800000 (30분)
      #max-lifetime: 7200000
      # 유휴 상태와 사용중인 커넥션을 포함해서 풀이 허용하는 최대 커넥션 개수를 설정한다. 이 값은 데이터베이스에 대한 실제 커넥션의 최대 개수를 결정한다.
      # 풀이 이 크기에 도달하고 유휴 커넥션이 없을 때 connectionTimeout이 지날 때까지 getConnection() 호출은 블록킹된다.
      # default: 10
      maximum-pool-size: 3
      # 풀에 유지할 유휴 커넥션의 최소 개수를 설정한다.
      # default: 10
      minimum-idle: 1
      # 커넥션이 유효한지 검사할 때 사용할 쿼리를 지정한다. 드라이버가 JDBC4를 지원하면 이 프로퍼티를 설정하지 말자. 이 프로퍼티를 설정하지 않으면 JDBC4의 Conneciton.isValid()를 사용해서 유효한지 검사를 수행한다.
      # default: 없음
      #connection-test-query:
      # 커넥션이 누수 가능성이 있다는 로그 메시지를 출력하기 전에 커넥션이 풀에서 벗어날 수 있는 시간을 밀리초로 설정한다. 0은 누수 발견을 하지 않는다. 허용하는 최소 값은 2000(2초)이다.
      # default: 0
      #leak-detection-threshold: 0
    
## Security
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "721627330971-5pe82kv62vmfjvql882aq89le939628o.apps.googleusercontent.com"
            client-secret: "K_QqpzpFZQUM3Bk3tCKKRVAu"
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
          github:
            client-id: "87b2b50ddae619b79cb7"
            client-secret: "f18c5408455a037161f65bb1a8af328334d5f303"
            redirect-uri: "/login/oauth2/code/{registrationId}"
#          facebooek:
#            client-id: ""
#            client-secret: ""
#          okta:
#            client-id: ""
#            client-secret: ""
          naver:
            client-id: "tPibCKEIzr3XcrEDkMSg"
            client-secret: "O7gD9nJv_Q"
            redirect-uri: "/login/oauth2/code/{registrationId}"
            authorizationGrantType: authorization_code
            scope:
              - ""
            clientName: Naver
          kakao:
            client-id: "ace782219285baeb0ae371dbc0034eb0"
            client-secret: "yByD76DL7OxkJUBGGc6ZlhAmu4FaU0kb"
            redirect-uri: "/login/oauth2/code/{registrationId}"
            authorizationGrantType: "authorization_code"
            client-authentication-method: post
            scope:
              - ""
            clientName: Kakao
        provider:
          naver:
            authorization-uri: "https://nid.naver.com/oauth2.0/authorize"
            token-uri: "https://nid.naver.com/oauth2.0/token"
            user-info-uri: "https://openapi.naver.com/v1/nid/me"
            user-name-attribute: "id"
          kakao:
            authorization-uri: "https://kauth.kakao.com/oauth/authorize"
            token-uri: "https://kauth.kakao.com/oauth/token"
            user-info-uri: "https://kapi.kakao.com/v2/user/me"
            user-name-attribute: "id"